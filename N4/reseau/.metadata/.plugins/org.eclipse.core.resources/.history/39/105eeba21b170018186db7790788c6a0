package exo4;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class ServeurBegMT {

	private ServerSocket serveur;
	
	
	public ServeurBegMT(int port) {
		try {
		    serveur = new ServerSocket(port);
		} catch (IOException e) {
		    e.printStackTrace();
		    System.exit(1);
		}
	}
	
	public void go() {
		Socket unClient = null;	
		// Boucle d'attente des clients
		while (true ) {
		    try {
			// accept() est bloquant. Quand on en sort, on a un nouveau
			// client avec une nouvelle instance de socket
			unClient = serveur.accept();
			
			new Thread(new ThreadBeg(unClient)).start();
			
		    } catch (IOException e) {
			e.printStackTrace();
			System.exit(1);
		    }
		    
		    //realiseService(unClient);
		}
	}
	

    private void realiseService(Socket unClient) {
	PrintWriter envoi = null;
	BufferedReader reception = null;
	try {
	    // Récupération d'un flux orienté texte pour écrire dans la socket
	    envoi = new PrintWriter(unClient.getOutputStream(), true);
	    
	    // Récupération d'un flux orienté texte pou lire dans la socket
	    reception = new BufferedReader(
			     new InputStreamReader(unClient.getInputStream()));
	    
	    String message = reception.readLine();
	    envoi.println(message + " World !");
	} catch (IOException e) {
	    e.printStackTrace();
	    System.exit(1);
	}
    }
    
    public static void main(String[] args) {
	// Le client est appelé avec le port à utiliser en paramètre
	new ServeurBegMT (9876).miseEnService();;
	
	
    }   
	
}
