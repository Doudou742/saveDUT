package fr.ulille.iut;

import java.util.HashMap;
import java.util.Map;

import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriInfo;

/**
 * Root resource (exposed at "myresource" path)
 */
@Path("PizzaRessource")
public class PizzaRessource {

	private Pizza pizza;
	
	// Pour l'instant, on se contentera d'une variable statique pour conserver l'état
    private static Map<String, Pizza> pizzas = new HashMap<>();

    // L'annotation @Context permet de récupérer des informations sur le contexte d'exécution de la ressource.
    // Ici, on récupère les informations concernant l'URI de la requête HTTP, ce qui nous permettra de manipuler
    // les URI de manière générique.
    @Context
    public UriInfo uriInfo;
	
	public PizzaRessource() {
	}
	
    /**
     * Method handling HTTP GET requests. The returned object will be sent
     * to the client as "text/plain" media type.
     *
     * @return String that will be returned as a text/plain response.
     */
	
    @GET
    @Produces(MediaType.TEXT_PLAIN)
    public String getIt() {
        return "Dans pizza";
    }
    
    @POST 
    //@Produces(MediaType.TEXT_PLAIN)
    public Response post(Pizza pizza) {
    	this.pizza.setBase(pizza.getBase());
    	this.pizza.setId(pizza.getId());
    	this.pizza.setIngredients(pizza.getIngredients());
    	this.pizza.setNom(pizza.getNom());
    	this.pizza.setTaille(pizza.getTaille());
    	//return "pizza done";
    }
}